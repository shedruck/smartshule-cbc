<?phpdefined('BASEPATH') OR exit('No direct script access allowed');/** * @package  	 *  @subpackage  *  Categories * @category   * Module */class Admin extends Admin_Controller{     /**      * The id of post      * @access protected      * @var int      */     protected $id = 0;     /**      * Array that contains the validation rules      * @access protected      * @var array      */     protected $validation_rules = array(             array(                     'field' => 'status',                     'label' => 'Status',                     'rules' => 'trim|required'             ),             array(                     'field' => 'title',                     'label' => 'Title',                     'rules' => 'trim|required|html_special_chars|unique[email_templates.title]',             ), array(                     'field' => 'slug',                     'label' => 'Slug',                     'rules' => 'trim|required|unique[email_templates.slug]',             ), array(                     'field' => 'description',                     'label' => 'Description',                     'rules' => 'trim',             ), array(                     'field' => 'content',                     'label' => 'Email Text',                     'rules' => 'trim|required',             ),     );     /**      * The constructor      * @access public      * @return void      */     public function __construct()     {          parent::__construct();          /*$this->template->set_layout('default');          $this->template->set_partial('sidebar', 'partials/sidebar.php')                       ->set_partial('top', 'partials/top.php');*/          if (!$this->ion_auth->logged_in())          {               redirect('login');          }         /* if (!$this->ion_auth->is_in_group($this->user->id, 1) && !$this->ion_auth->is_in_group($this->user->id, 7))          {               $this->session->set_flashdata('message', array('type' => 'success', 'text' => '<b style="color:red">Sorry you do not have permission to access this Module!!</b>'));               redirect('admin');          }*/          $this->load->model('users/users_m');          $this->load->model('email_templates_m');          //$this->load->library('pagination');          $this->load->helper('pagination');     }     /**      * Show all created posts      * @access public      * @return void      */     public function index()     {          //set the base/default where clause          $base_where = array('show_future' => TRUE, 'status' => 'all');          $base_where['status'] = $this->input->post('f_status') ? $this->input->post('f_status') : $base_where['status'];          // Create pagination links          $total_rows = $this->email_templates_m->count_by($base_where);          $pagination = create_pagination('admin/email_templates/index', $total_rows);          // Using this data, get the relevant results          $posts = $this->email_templates_m->limit($pagination['limit'])->get_many_by($base_where);          $data['title'] = 'Email Templates';          $data['posts'] = $posts;          $data['pagination'] = $pagination;          $this->template->build('admin/index', $data);     }     /**      * Show all created posts      * @access public      * @return void      */     public function import()     {          //set the base/default where clause          $base_where = array('show_future' => TRUE, 'status' => 'all');          $base_where['status'] = $this->input->post('f_status') ? $this->input->post('f_status') : $base_where['status'];          // Create pagination links          $total_rows = $this->email_templates_m->count_by($base_where);          $pagination = create_pagination('admin/email_templates/index', $total_rows);          // Using this data, get the relevant results          $posts = $this->email_templates_m->limit($pagination['limit'])->get_many_by($base_where);          $data['title'] = 'Email Templates';          $data['posts'] = $posts;          $data['pagination'] = $pagination;          $this->template->build('admin/import', $data);     }     /**      * Show all created posts      * @access public      * @return void      */     public function export()     {          //set the base/default where clause          $base_where = array('show_future' => TRUE, 'status' => 'all');          $base_where['status'] = $this->input->post('f_status') ? $this->input->post('f_status') : $base_where['status'];          // Create pagination links          $total_rows = $this->email_templates_m->count_by($base_where);          $pagination = create_pagination('admin/email_templates/index', $total_rows);          // Using this data, get the relevant results          $posts = $this->email_templates_m->limit($pagination['limit'])->get_many_by($base_where);          $data['title'] = 'Email Templates';          $data['posts'] = $posts;          $data['pagination'] = $pagination;          $this->template->build('admin/export', $data);     }     /**      * Show all created posts      * @access public      * @return void      */     public function help()     {          //set the base/default where clause          $base_where = array('show_future' => TRUE, 'status' => 'all');          $base_where['status'] = $this->input->post('f_status') ? $this->input->post('f_status') : $base_where['status'];          // Create pagination links          $total_rows = $this->email_templates_m->count_by($base_where);          $pagination = create_pagination('admin/email_templates/index', $total_rows);          // Using this data, get the relevant results          $posts = $this->email_templates_m->limit($pagination['limit'])->get_many_by($base_where);          $data['title'] = 'Email Templates';          $data['posts'] = $posts;          $data['pagination'] = $pagination;          $this->template->build('admin/help', $data);     }     /**      * Create new email_templates      * @access public      * @return void      */     public function create()     {          $this->load->library('form_validation');          $this->form_validation->set_rules($this->validation_rules);          if ($this->form_validation->run())          {               $id = $this->email_templates_m->insert(array(                       'title' => $this->input->post('title'),                       'slug' => $this->input->post('slug'),                       'description' => $this->input->post('description'),                       'content' => $this->input->post('content'),                       'status' => $this->input->post('status'),                       'created_on' => time(),                       'created_by' => $this->ion_auth->get_user()->id,               ));               if ($id)               {                    $this->session->set_flashdata('success', sprintf('Email Templates Added Successfully ', $this->input->post('title')));               }               else               {                    $this->session->set_flashdata('error', 'Error adding Email Templates');               }               redirect('admin/email_templates');          }          else          {               // Go through all the known fields and get the post values               $post = new StdClass();               foreach ($this->validation_rules as $key => $field)               {                    $post->$field['field'] = set_value($field['field']);               }          }          $data['post'] = $post;          $this->template->build('admin/form', $data);     }     /**      * Edit email_templates Item      * @access public      * @param int $id the ID of the posts post to edit      * @return void      */     public function edit($id = 0)     {          $id OR redirect('admin/email_templates');          $this->load->library('form_validation');          $this->form_validation->set_rules($this->validation_rules);          $post = $this->email_templates_m->get($id);          $this->id = $post->id;          //initialize the filenames with the filenames stored          if ($this->form_validation->run())          {               $result = $this->email_templates_m->update($id, array(                       'title' => $this->input->post('title'), 'slug' => $this->input->post('slug'), 'description' => $this->input->post('description'), 'content' => $this->input->post('content'),                       'status' => $this->input->post('status'),                       'modified_on' => time(),                       'modified_by' => $this->ion_auth->get_user()->id,               ));               if ($result)               {                    $this->session->set_flashdata(array('success' => sprintf('Email Templates added successfully ', $this->input->post('title'))));               }               else               {                    $this->session->set_flashdata(array('error' => 'Error  Adding Email Templates'));               }               // Redirect back to the form or main page               $this->input->post('btnAction') == 'save_exit' ? redirect('admin/email_templates') : redirect('admin/email_templates/edit/' . $id);          }          // Go through all the known fields and get the post values          foreach (array_keys($this->validation_rules) as $field)          {               if (isset($_POST[$field]))               {                    $post->$field = $this->form_validation->$field;               }          }          $post->created_on = time();          $data['post'] = $post;          // Load WYSIWYG editor          $this->template->build('admin/form', $data);     }     function uninstall()     {          if ($this->email_templates_m->uninstall())          {               $this->session->set_flashdata('success', 'Module Email Templates has been uninstalled');               //rename dir               if (file_exists(APPPATH . 'modules/email_templates'))               {                    //rename file                    $new_name = 'email_templates_deleted_' . date("Y-m-d-h-i-s");                    //rename(APPPATH.'modules/email_templates',$new_name);                    rename(FCPATH . APPPATH . 'modules/email_templates', FCPATH . APPPATH . 'modules/' . $new_name);                    $this->session->set_flashdata('info', 'Module Email Templates folder renamed to ' . $new_name);               }          }     }     /**      * Preview email_templates item      * @access public      * @param int $id the ID of the email_templates items to preview      * @return void      */     public function preview($id = 0)     {          $post = $this->email_templates_m->get($id);          $this->template                       ->set_layout('modal', 'admin')                       ->set('post', $post)                       ->build('admin/preview');     }     /**      * Helper method to determine what to do with selected items from form post      * @access public      * @return void      */     public function action()     {          switch ($this->input->post('btnAction'))          {               case 'publish':                    $this->publish();                    break;               case 'delete':                    $this->delete();                    break;               default:                    redirect('admin/email_templates');                    break;          }     }     /**      * Delete posts post      * @access public      * @param int $id the ID of the posts post to delete      * @return void      */     public function delete($id = 0)     {          // Delete one          $ids = ($id) ? array($id) : $this->input->post('action_to');          // Go through the array of slugs to delete          if (!empty($ids))          {               $post_titles = array();               foreach ($ids as $id)               {                    // Get the current page so we can grab the id too                    if ($post = $this->email_templates_m->get($id))                    {                         $this->email_templates_m->delete($id);                         // Wipe cache for this model, the content has changed                         $post_titles[] = $post->title;                    }               }          }          // Some pages have been deleted          if (!empty($post_titles))          {               // Only deleting one page               if (count($post_titles) == 1)               {                    $this->session->set_flashdata('success', sprintf(' Email Templates Deleted', $post_titles[0]));               }               // Deleting multiple pages               else               {                    $this->session->set_flashdata('success', sprintf(' Email Templates Deleted', implode('", "', $post_titles)));               }          }          // For some reason, none of them were deleted          else          {               $this->session->set_flashdata('notice', 'Items: Email Templates Deleted');          }          redirect('admin/email_templates');     }}